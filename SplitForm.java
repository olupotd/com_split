/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication23;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import org.jdesktop.swingx.JXDatePicker;

import app_test_files.DbAttendant;

/**
 *
 * @author Neptune-muk
 */
@SuppressWarnings("serial")
public class SplitForm extends javax.swing.JFrame {

	/**
	 * Creates new form SplitForm
	 */

	public SplitForm(DbAttendant att) {
		super(att.getUser());
		initComponents();
		this.db_util = att;
		this.setLocationRelativeTo(null);
		SwingUtilities.getRootPane(splitBtn).setDefaultButton(splitBtn);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		new javax.swing.ButtonGroup();
		jInternalFrame1 = new javax.swing.JInternalFrame();
		jPanel1 = new javax.swing.JPanel();
		gl2gl = new javax.swing.JRadioButton();
		jLabel1 = new javax.swing.JLabel();
		gl2ac = new javax.swing.JRadioButton();
		ac2gl = new javax.swing.JRadioButton();
		ac2ac = new javax.swing.JRadioButton();
		jPanel2 = new javax.swing.JPanel();
		jLabel2 = new javax.swing.JLabel();
		from_account_num = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		current_balance = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		amt_to_split = new javax.swing.JTextField();
		acc1 = new javax.swing.JTextField();
		acc2 = new javax.swing.JTextField();
		acc3 = new javax.swing.JTextField();
		acc4 = new javax.swing.JTextField();
		acc5 = new javax.swing.JTextField();
		amt1 = new javax.swing.JTextField();
		amt2 = new javax.swing.JTextField();
		amt3 = new javax.swing.JTextField();
		amt4 = new javax.swing.JTextField();
		amt5 = new javax.swing.JTextField();
		percentagefield = new javax.swing.JTextField();
		ratio2 = new javax.swing.JTextField();
		ratio3 = new javax.swing.JTextField();
		ratio4 = new javax.swing.JTextField();
		ratio5 = new javax.swing.JTextField();
		jLabel12 = new javax.swing.JLabel();
		jLabel13 = new javax.swing.JLabel();
		jLabel14 = new javax.swing.JLabel();
		jLabel15 = new javax.swing.JLabel();
		jLabel16 = new javax.swing.JLabel();
		ratio6 = new javax.swing.JTextField();
		jLabel17 = new javax.swing.JLabel();
		jLabel18 = new javax.swing.JLabel();
		picker = new JXDatePicker();
		picker.setDate(Calendar.getInstance().getTime());
		picker.setFormats(new SimpleDateFormat("dd-MM-yyyy"));
		jPanel3 = new javax.swing.JPanel();
		jLabel4 = new javax.swing.JLabel();
		partitionBtn = new javax.swing.JButton();
		splitBtn = new javax.swing.JButton();
		logoutBtn = new javax.swing.JButton();
		exitAppBtn = new javax.swing.JButton();
		clearBtn = new javax.swing.JButton();
		percentageBtn = new javax.swing.JButton();
		get_balanceBtn = new javax.swing.JButton();
		jPanel4 = new javax.swing.JPanel();
		jLabel9 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jInternalFrame1.setVisible(true);

		jPanel1.setBackground(new java.awt.Color(204, 204, 204));

		gl2gl.setText("GL TO GL");
		gl2gl.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				gl2glActionPerformed(evt);
			}
		});

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		jLabel1.setText("DISTRIBUTIONS");

		gl2ac.setText("GL TO ACCOUNT");
		gl2ac.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				gl2acActionPerformed(evt);
			}
		});

		ac2gl.setText("ACCOUNT TO GL");
		ac2gl.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ac2glActionPerformed(evt);
			}
		});

		ac2ac.setText("ACCOUNT TO ACCOUNT");
		ac2ac.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ac2acActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addGap(12, 12, 12)
										.addComponent(
												jLabel1,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addContainerGap())
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addGap(17, 17, 17)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(gl2gl)
														.addComponent(gl2ac)
														.addComponent(ac2gl)
														.addComponent(ac2ac))
										.addGap(0, 10, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout.createSequentialGroup().addGap(23, 23, 23)
						.addComponent(jLabel1).addGap(7, 7, 7)
						.addComponent(gl2gl).addGap(18, 18, 18)
						.addComponent(gl2ac).addGap(18, 18, 18)
						.addComponent(ac2gl).addGap(18, 18, 18)
						.addComponent(ac2ac)
						.addContainerGap(12, Short.MAX_VALUE)));

		jPanel2.setBackground(new java.awt.Color(204, 204, 204));
		jPanel2.setLayout(new java.awt.GridBagLayout());

		jLabel2.setText("FROM ACCOUNT");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(30, 26, 0, 0);
		jPanel2.add(jLabel2, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 6;
		gridBagConstraints.ipadx = 205;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(24, 18, 0, 0);
		jPanel2.add(from_account_num, gridBagConstraints);

		jLabel3.setText("CURRENT BAL");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(29, 35, 0, 0);
		jPanel2.add(jLabel3, gridBagConstraints);

		current_balance.setEditable(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 6;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 205;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(26, 18, 0, 0);
		jPanel2.add(current_balance, gridBagConstraints);

		jLabel5.setText("RECEIVING ACCOUNT");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.gridwidth = 4;
		gridBagConstraints.ipadx = 24;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(36, 35, 0, 0);
		jPanel2.add(jLabel5, gridBagConstraints);

		jLabel6.setText("DISTRIBUTION RATIO");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 9;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.gridwidth = 4;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(36, 12, 0, 0);
		jPanel2.add(jLabel6, gridBagConstraints);

		jLabel7.setText("AMOUNT ");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.ipadx = 14;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(36, 45, 0, 0);
		jPanel2.add(jLabel7, gridBagConstraints);

		jLabel8.setText("AMOUNT TO SPLIT");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.ipadx = 20;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(29, 20, 0, 0);
		jPanel2.add(jLabel8, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.gridwidth = 6;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 205;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(26, 18, 0, 0);
		jPanel2.add(amt_to_split, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.gridwidth = 5;
		gridBagConstraints.ipadx = 143;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 35, 0, 0);
		jPanel2.add(acc1, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 9;
		gridBagConstraints.gridwidth = 5;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 143;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 35, 0, 0);
		jPanel2.add(acc2, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 11;
		gridBagConstraints.gridwidth = 5;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 143;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 35, 0, 0);
		jPanel2.add(acc3, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 13;
		gridBagConstraints.gridwidth = 5;
		gridBagConstraints.ipadx = 143;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 35, 0, 0);
		jPanel2.add(acc4, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 15;
		gridBagConstraints.gridwidth = 5;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 143;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 35, 22, 0);
		jPanel2.add(acc5, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 109;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(21, 18, 0, 0);
		jPanel2.add(amt1, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 9;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 109;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 0);
		jPanel2.add(amt2, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 11;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 109;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 0);
		jPanel2.add(amt3, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 13;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 109;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(21, 18, 0, 0);
		jPanel2.add(amt4, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 15;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 109;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 18, 22, 0);
		jPanel2.add(amt5, gridBagConstraints);

		percentagefield
				.setToolTipText("Ratio to apply on the entered amount to spit");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 10;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 44;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(26, 4, 0, 0);
		jPanel2.add(percentagefield, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 10;
		gridBagConstraints.gridy = 9;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 88;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 1, 0, 0);
		jPanel2.add(ratio2, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 10;
		gridBagConstraints.gridy = 11;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 88;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 1, 0, 0);
		jPanel2.add(ratio3, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 10;
		gridBagConstraints.gridy = 13;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 88;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(21, 1, 0, 0);
		jPanel2.add(ratio4, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 10;
		gridBagConstraints.gridy = 15;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 88;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(18, 1, 22, 0);
		jPanel2.add(ratio5, gridBagConstraints);

		jLabel12.setText("UGX");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 7;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(24, 4, 0, 0);
		jPanel2.add(jLabel12, gridBagConstraints);

		jLabel13.setText("UGX");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 7;
		gridBagConstraints.gridy = 9;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(21, 4, 0, 0);
		jPanel2.add(jLabel13, gridBagConstraints);

		jLabel14.setText("UGX");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 7;
		gridBagConstraints.gridy = 11;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(21, 4, 0, 0);
		jPanel2.add(jLabel14, gridBagConstraints);

		jLabel15.setText("UGX");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 7;
		gridBagConstraints.gridy = 13;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(24, 4, 0, 0);
		jPanel2.add(jLabel15, gridBagConstraints);

		jLabel16.setText("UGX");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 7;
		gridBagConstraints.gridy = 15;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(21, 4, 0, 0);
		jPanel2.add(jLabel16, gridBagConstraints);

		ratio6.setToolTipText("Ratio to apply on the entered amount to spit");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 10;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 88;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(21, 1, 0, 0);
		jPanel2.add(ratio6, gridBagConstraints);

		jLabel17.setText("X");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 9;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(29, 18, 0, 0);
		jPanel2.add(jLabel17, gridBagConstraints);

		jLabel18.setText("%");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 11;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(29, 10, 0, 0);
		jPanel2.add(jLabel18, gridBagConstraints);

		picker.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pickerActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 9;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 5;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 5;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(23, 18, 0, 10);
		jPanel2.add(picker, gridBagConstraints);

		jPanel3.setBackground(new java.awt.Color(204, 204, 204));

		jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		jLabel4.setText("ACTIONS");

		partitionBtn.setText("Get Propotions");
		partitionBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				partitionBtnActionPerformed(evt);
			}
		});

		splitBtn.setText("Split Partitions");
		splitBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				splitBtnActionPerformed(evt);
			}
		});

		logoutBtn.setText("Logout");
		logoutBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				logoutBtnActionPerformed(evt);
			}
		});

		exitAppBtn.setText("Exit Application");
		exitAppBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitAppBtnActionPerformed(evt);
			}
		});

		clearBtn.setText("Clear Fields");
		clearBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				clearBtnActionPerformed(evt);
			}
		});

		percentageBtn.setText("Calculate %ge");
		percentageBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				percentageBtnActionPerformed(evt);
			}
		});

		get_balanceBtn.setText("Get Balance");
		get_balanceBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				get_balanceBtnActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(
				jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout
				.setHorizontalGroup(jPanel3Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel3Layout
										.createSequentialGroup()
										.addGap(31, 31, 31)
										.addComponent(jLabel4)
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE))
						.addGroup(
								jPanel3Layout
										.createSequentialGroup()
										.addGroup(
												jPanel3Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																false)
														.addComponent(
																get_balanceBtn,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																percentageBtn,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																133,
																Short.MAX_VALUE)
														.addComponent(
																partitionBtn,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																133,
																Short.MAX_VALUE)
														.addComponent(
																splitBtn,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																133,
																Short.MAX_VALUE)
														.addComponent(
																clearBtn,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																133,
																Short.MAX_VALUE)
														.addComponent(
																logoutBtn,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																133,
																Short.MAX_VALUE)
														.addComponent(
																exitAppBtn,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																133,
																Short.MAX_VALUE))
										.addGap(0, 0, Short.MAX_VALUE)));
		jPanel3Layout
				.setVerticalGroup(jPanel3Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel3Layout
										.createSequentialGroup()
										.addComponent(jLabel4)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(get_balanceBtn)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(percentageBtn)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(partitionBtn)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(splitBtn)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(clearBtn)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(logoutBtn)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(exitAppBtn)
										.addContainerGap()));

		jPanel4.setToolTipText("Neptune Financial Software");

		jLabel9.setIcon(new javax.swing.ImageIcon(
				"C:\\Users\\Neptune-muk\\Documents\\NetBeansProjects\\Com\\src\\Images\\Neptune.jpg")); // NOI18N
		jLabel9.setText("jLabel9");

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(
				jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel4Layout
						.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)
						.addComponent(jLabel9,
								javax.swing.GroupLayout.PREFERRED_SIZE, 171,
								javax.swing.GroupLayout.PREFERRED_SIZE)));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel4Layout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(jLabel9,
								javax.swing.GroupLayout.PREFERRED_SIZE, 83,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(21, Short.MAX_VALUE)));

		javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(
				jInternalFrame1.getContentPane());
		jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
		jInternalFrame1Layout
				.setHorizontalGroup(jInternalFrame1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jInternalFrame1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jInternalFrame1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jPanel4,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jPanel1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(
												jPanel2,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addGap(18, 18, 18)
										.addComponent(
												jPanel3,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(28, Short.MAX_VALUE)));
		jInternalFrame1Layout
				.setVerticalGroup(jInternalFrame1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jInternalFrame1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jInternalFrame1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addGroup(
																jInternalFrame1Layout
																		.createSequentialGroup()
																		.addComponent(
																				jPanel1,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jPanel4,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
														.addComponent(
																jPanel2,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jPanel3,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addContainerGap(15, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 885, Short.MAX_VALUE)
				.addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jInternalFrame1)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 462, Short.MAX_VALUE)
				.addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(
										layout.createSequentialGroup()
												.addComponent(
														jInternalFrame1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(0, 0, Short.MAX_VALUE))));

		pack();
	}// </editor-fold>

	String balance, splt_amt;
	DbAttendant db_util;

	private void get_balanceBtnActionPerformed(java.awt.event.ActionEvent evt) {
		if (!current_balance.getText().isEmpty()) {
			current_balance.setText("");
			amt_to_split.setText("");
			ratio2.setText("");
			ratio3.setText("");
			ratio4.setText("");
			ratio5.setText("");
			ratio6.setText("");
			amt1.setText("");
			amt2.setText("");
			amt3.setText("");
			amt4.setText("");
			amt5.setText("");
		}
		String acc_num = from_account_num.getText().trim();
		if (!gl2ac.isSelected() && !gl2gl.isSelected() && !ac2ac.isSelected()
				&& !ac2gl.isSelected()) {
			JOptionPane.showMessageDialog(this,
					"Please select a distribution type");
		} else {
			if (counter > 0) {
				if ((gl2ac.isSelected() || gl2gl.isSelected())
						&& acc_num.contains("-")) {
					balance = db_util.getBalance("GL", acc_num, date);
				} else {
					balance = db_util.getBalance("Account", acc_num, date);
				}
				current_balance.setText(balance + " UGX");
			} else
				JOptionPane.showMessageDialog(this, "Please select a Date");
		}
		// TODO add your handling code here:
	}

	double[] ratios = new double[5];

	private void partitionBtnActionPerformed(java.awt.event.ActionEvent evt) {
		if (amt_to_split.getText().isEmpty()) {
			JOptionPane.showMessageDialog(this,
					"Your amount to split field is empty");
			amt_to_split.requestFocus();
		} else if (Double.parseDouble(amt_to_split.getText().split(" ")[0]) > Double
				.parseDouble(current_balance.getText().split(" ")[0])) {
			JOptionPane
					.showMessageDialog(this,
							"Amount to split can't be greater than your actual balance. Try again");
			amt_to_split.requestFocus();
		} else if (ratio6.getText().equals("100")
				&& (ratio2.getText().isEmpty() || ratio2.getText().equals(0))
				&& (ratio4.getText().isEmpty() || ratio4.getText().equals(0))
				&& (ratio5.getText().isEmpty() || ratio5.getText().equals(0))
				&& (ratio3.getText().isEmpty() || ratio3.getText().equals(0))) {
			// then the amount to split is equal to the account added.
			amt1.setText(amt_to_split.getText());
			acc2.setEditable(false);
			acc3.setEditable(false);
			acc4.setEditable(false);
			acc5.setEditable(false);
		} else if (ratio2.getText().equals("100")
				&& (ratio3.getText().isEmpty() || ratio3.getText().equals(0))
				&& (ratio4.getText().isEmpty() || ratio4.getText().equals(0))
				&& (ratio5.getText().isEmpty() || ratio5.getText().equals(0))
				&& (ratio6.getText().isEmpty() || ratio6.getText().equals(0))) {
			// then the amount to split is equal to the account added.
			amt2.setText(amt_to_split.getText());
			acc1.setEditable(false);
			acc3.setEditable(false);
			acc4.setEditable(false);
			acc5.setEditable(false);
		} else if (ratio3.getText().equals("100")
				&& (ratio2.getText().isEmpty() || ratio2.getText().equals(0))
				&& (ratio4.getText().isEmpty() || ratio4.getText().equals(0))
				&& (ratio5.getText().isEmpty() || ratio5.getText().equals(0))
				&& (ratio6.getText().isEmpty() || ratio6.getText().equals(0))) {
			amt3.setText(amt_to_split.getText());
			acc1.setEditable(false);
			acc2.setEditable(false);
			acc3.setEditable(false);
			acc5.setEditable(false);
		} else if (ratio4.getText().equals("100")
				&& (ratio3.getText().isEmpty() || ratio3.getText().equals(0))
				&& (ratio2.getText().isEmpty() || ratio2.getText().equals(0))
				&& (ratio5.getText().isEmpty() || ratio5.getText().equals(0))
				&& (ratio6.getText().isEmpty() || ratio6.getText().equals(0))) {
			amt4.setText(amt_to_split.getText());
			acc1.setEditable(false);
			acc2.setEditable(false);
			acc3.setEditable(false);
			acc5.setEditable(false);
		} else if (ratio5.getText().equals("100")
				&& (ratio3.getText().isEmpty() || ratio3.getText().equals(0))
				&& (ratio4.getText().isEmpty() || ratio4.getText().equals(0))
				&& (ratio6.getText().isEmpty() || ratio6.getText().equals(0)
						&& (ratio2.getText().isEmpty() || ratio2.getText()
								.equals(0)))) {
			amt5.setText(amt_to_split.getText());
			acc1.setEditable(false);
			acc2.setEditable(false);
			acc3.setEditable(false);
			acc4.setEditable(false);
		} else {
			ratios[0] = Double.parseDouble(ratio6.getText());
			ratios[1] = Double.parseDouble(ratio2.getText());
			ratios[2] = Double.parseDouble(ratio3.getText());
			ratios[3] = Double.parseDouble(ratio4.getText());
			ratios[4] = Double.parseDouble(ratio5.getText());
			List<String> portions = db_util.partition(amt_to_split.getText(),
					ratios);
			if (portions.size() >= 4) {
				amt1.setText(portions.get(0));
				amt2.setText(portions.get(1));
				amt3.setText(portions.get(2));
				amt4.setText(portions.get(3));
				amt5.setText(portions.get(4));
			}
		} // TODO add your handling code here:
		accounts.clear();
		// /Load all the accounts
		if (!from_account_num.getText().isEmpty())
			accounts.add(0, from_account_num.getText() + ";CR;"
					+ current_balance.getText());
		if (!acc1.getText().isEmpty())
			accounts.add(acc1.getText() + ";DR;" + amt1.getText());
		if (!acc2.getText().isEmpty())
			accounts.add(acc2.getText() + ";DR;" + amt2.getText());
		if (!acc3.getText().isEmpty())
			accounts.add(acc3.getText() + ";DR;" + amt3.getText());
		if (!acc4.getText().isEmpty())
			accounts.add(acc4.getText() + ";DR;" + amt4.getText());
		if (!acc5.getText().isEmpty())
			accounts.add(acc5.getText() + ";DR;" + amt5.getText());
	}

	private List<String> accounts = new ArrayList<>();

	private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {
		if (JOptionPane.showConfirmDialog(this,
				"Are you sure you want to Logout?") == JOptionPane.OK_OPTION) {
			db_util.closeConnection();
			this.dispose();
			new Login().setVisible(true);
		} // TODO add your handling code here:
	}

	private void exitAppBtnActionPerformed(java.awt.event.ActionEvent evt) {
		if (JOptionPane
				.showConfirmDialog(this,
						"Are you sure you want to Quit the Application. Any unsaved data will be lost?") == JOptionPane.OK_OPTION) {
			db_util.closeConnection();
			this.dispose();
			System.exit(0);
		}// TODO add your handling code here:
	}

	private boolean validate_all() {
		if (from_account_num.getText().isEmpty() || !gl2ac.isSelected()
				|| !gl2gl.isSelected() || !ac2ac.isSelected()
				|| !ac2gl.isSelected()) {
			JOptionPane.showMessageDialog(this,
					"Please select a distribution type to process.");
			return false;
		} else if (from_account_num.getText().isEmpty()
				|| current_balance.getText().isEmpty()
				|| amt_to_split.getText().isEmpty()) {
			JOptionPane.showMessageDialog(this,
					"You cannot perform an operation with major fields empty");
			return false;
		} else if (acc1.getText().isEmpty()) {
			JOptionPane
					.showMessageDialog(this,
							"You need atleast one receiving account to perform this transaction.");
			return false;
		}
		return true;
	}

	int i = 1;
	List<String> codes = new ArrayList<>();

	private void splitBtnActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if (validate_all()) {
			if (!accounts.isEmpty())
				codes.clear();
			for (String ac : accounts) {
				if (db_util.postBatch(ac.split(";")[0], "UGX",
						Integer.parseInt(ac.split(";")[2]), i,
						db_util.getUser(), ac.split(";")[1]))
					continue;
				else
					codes.add(ac);
				i++;
			}
			if (codes.isEmpty()) {
				if (db_util.commit_post()) {
					JOptionPane.showMessageDialog(this,
							"Operation completed Succesfully.");
				} else {
					JOptionPane
							.showMessageDialog(this,
									"Operation Failed. Review your entries and try again");
				}
			} else {
				JOptionPane
						.showMessageDialog(this,
								"There were errors while posting the transaction. rolback initiated.");
				db_util.rolBack();
			}
		}
	}

	private void gl2glActionPerformed(java.awt.event.ActionEvent evt) {
		gl2ac.setSelected(false);
		ac2ac.setSelected(false);
		ac2gl.setSelected(false);// TODO add your handling code here:
	}

	private void gl2acActionPerformed(java.awt.event.ActionEvent evt) {
		gl2gl.setSelected(false);
		ac2ac.setSelected(false);
		ac2gl.setSelected(false);// TODO add your handling code here:
	}

	private void ac2glActionPerformed(java.awt.event.ActionEvent evt) {
		gl2ac.setSelected(false);
		ac2ac.setSelected(false);
		gl2gl.setSelected(false);// TODO add your handling code here:
	}

	private void ac2acActionPerformed(java.awt.event.ActionEvent evt) {
		gl2ac.setSelected(false);
		gl2gl.setSelected(false);
		ac2gl.setSelected(false); // TODO add your handling code here:
	}

	private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {
		gl2ac.setSelected(false);
		ac2ac.setSelected(false);
		ac2gl.setSelected(false);
		gl2gl.setSelected(false);
		// Clear all other fields. as well
		acc1.setText("");
		acc2.setText("");
		acc3.setText("");
		acc4.setText("");
		acc5.setText(""); // TODO add your handling code here:
	}

	private void percentageBtnActionPerformed(java.awt.event.ActionEvent evt) {
		int ptage = Integer.parseInt(percentagefield.getText());
		amt_to_split.setText(String.valueOf(compute(ptage)));
	}

	String date;

	int counter = 0;

	private void pickerActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		date = new SimpleDateFormat("yyyy-MM-dd").format(picker.getDate());
		System.out.println(date);
		counter++;
	}

	private double compute(int data) {
		double amount = data
				* Double.parseDouble(current_balance.getText().split(";")[0]
						.split(" ")[0]);
		return (amount / 100);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */

	// Variables declaration - do not modify
	private javax.swing.JRadioButton ac2ac;
	private javax.swing.JRadioButton ac2gl;
	private javax.swing.JTextField acc1;
	private javax.swing.JTextField acc2;
	private javax.swing.JTextField acc3;
	private javax.swing.JTextField acc4;
	private javax.swing.JTextField acc5;
	private javax.swing.JTextField amt1;
	private javax.swing.JTextField amt2;
	private javax.swing.JTextField amt3;
	private javax.swing.JTextField amt4;
	private javax.swing.JTextField amt5;
	private javax.swing.JTextField amt_to_split;
	private javax.swing.JButton clearBtn;
	private javax.swing.JTextField current_balance;
	private JXDatePicker picker;
	private javax.swing.JButton exitAppBtn;
	private javax.swing.JTextField from_account_num;
	private javax.swing.JButton get_balanceBtn;
	private javax.swing.JRadioButton gl2ac;
	private javax.swing.JRadioButton gl2gl;
	private javax.swing.JInternalFrame jInternalFrame1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel15;
	private javax.swing.JLabel jLabel16;
	private javax.swing.JLabel jLabel17;
	private javax.swing.JLabel jLabel18;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JButton logoutBtn;
	private javax.swing.JButton partitionBtn;
	private javax.swing.JButton percentageBtn;
	private javax.swing.JTextField percentagefield;
	private javax.swing.JTextField ratio2;
	private javax.swing.JTextField ratio3;
	private javax.swing.JTextField ratio4;
	private javax.swing.JTextField ratio5;
	private javax.swing.JTextField ratio6;
	private javax.swing.JButton splitBtn;
	// End of variables declaration
}
